import java.nio.charset.StandardCharsets;
import java.security.spec.KeySpec;
import java.util.Base64;
import javax.crypto.Cipher;

import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import java.util.*;
public class HelloWorld
{
 private static final String SECRET_KEY="123456789";
 private static final String SALTVALUE="abcdefg";
 public static void main(String[] args) {
 Scanner sc=new Scanner(System.in);
 System.out.println("Enter plain text:");
 String original=sc.next();
 String encrypted=encrypt(original);
 String decrypted=decrypt(encrypted);
 System.out.println("Original value: " + original); 
 System.out.println("Encrypted value: " + encrypted); 
 System.out.println("Decrypted value: " + decrypted); 
 }
 public static String encrypt(String strToEncrypt) 
 { 
 try 
 { 
 
 byte[] iv = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; 
 IvParameterSpec ivspec = new IvParameterSpec(iv); 
 
 SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256"); 
 
 KeySpec spec = new PBEKeySpec(SECRET_KEY.toCharArray(),SALTVALUE.getBytes(), 65536, 256); 
 SecretKey tmp = factory.generateSecret(spec); 
 SecretKeySpec secretKey = new SecretKeySpec(tmp.getEncoded(), "AES"); 
 Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5Padding"); 
 cipher.init(Cipher.ENCRYPT_MODE, secretKey, ivspec); 
 
 return Base64.getEncoder().encodeToString(cipher.doFinal(strToEncrypt.getBytes(StandardCharsets.UTF_8))); 
 } 
 catch (Exception e) 
 {
   System.out.println("Error while encrypting: " + e.toString()); 
 { 
 System.out.println("Error occured during encryption: " + e.toString()); 
 } 
 return null; 
 } 
 }
 public static String decrypt(String strToDecrypt) 
 { 
 try 
 { 
  byte[] iv = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; 
  IvParameterSpec ivspec = new IvParameterSpec(iv); 
 
 SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256"); 
 
 KeySpec spec = new PBEKeySpec(SECRET_KEY.toCharArray(),SALTVALUE.getBytes(), 65536, 256); 
 SecretKey tmp = factory.generateSecret(spec); 
 SecretKeySpec secretKey = new SecretKeySpec(tmp.getEncoded(), "AES"); 
 Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING"); 
 cipher.init(Cipher.DECRYPT_MODE, secretKey, ivspec); 
 
 return new String(cipher.doFinal(Base64.getDecoder().decode(strToDecrypt))); 
 } 
 catch (Exception e) 
 {
 System.out.println("Error while encrypting: " + e.toString()); 
 { 
 System.out.println("Error occured during decryption: " + e.toString()); 
 } 
 return null; 
 }
 
}
}


Output:
   Enter plain text:
   flower
   Original value: 
   flower
   Encrypted value: 
   SHDYruayNOJawmddlsnFsQ==
   Decrypted value:
   flower
